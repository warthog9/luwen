name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
  workflow_dispatch:
  workflow_call:

jobs:
  # Build non-abi3 wheels for Python 3.8-3.10
  build-version-specific:
    name: Build version-specific wheels 📦
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build wheel for Python ${{ matrix.python-version }}
      uses: PyO3/maturin-action@v1
      with:
        target: x86_64
        manylinux: 2014
        args: --release --out dist -m crates/pyluwen/Cargo.toml --interpreter python${{ matrix.python-version }}
    - name: Store the wheel
      uses: actions/upload-artifact@v4
      with:
        name: python-package-py${{ matrix.python-version }}
        path: dist

  # Build abi3 wheel for Python 3.11+
  build-abi3:
    name: Build abi3 wheel for Python 3.11+ 📦
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build abi3 wheel
      uses: PyO3/maturin-action@v1
      with:
        target: x86_64
        manylinux: 2014
        args: --release --sdist --out dist -m crates/pyluwen/Cargo.toml --features abi3-py311
    - name: Store the wheel
      uses: actions/upload-artifact@v4
      with:
        name: python-package-abi3
        path: dist

#  publish-to-pypi:
#    name: >-
#      Publish Python 🐍 distribution 📦 to PyPI
#    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
#    needs:
#    - build-version-specific
#    - build-abi3
#    runs-on: ubuntu-latest
#    environment:
#      name: pypi
#      url: https://pypi.org/p/luwen
#    permissions:
#      id-token: write  # IMPORTANT: mandatory for trusted publishing
#
#    steps:
#    - name: Download all the dists
#      uses: actions/download-artifact@v4
#      with:
#        pattern: python-package-*
#        path: dist/
#        merge-multiple: true
#    - name: Publish distribution 📦 to PyPI
#      uses: pypa/gh-action-pypi-publish@release/v1
#
#  github-release:
#    name: >-
#      Sign the Python 🐍 distribution 📦 with Sigstore
#      and upload them to GitHub Release
#    needs:
#    - publish-to-pypi
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write  # IMPORTANT: mandatory for making GitHub Releases
#      id-token: write  # IMPORTANT: mandatory for sigstore
#
#    steps:
#    - name: Download all the dists
#      uses: actions/download-artifact@v4
#      with:
#        pattern: python-package-*
#        path: dist/
#        merge-multiple: true
#    - name: Sign the dists with Sigstore
#      uses: sigstore/gh-action-sigstore-python@v3.0.0
#      with:
#        inputs: >-
#          ./dist/*.tar.gz
#          ./dist/*.whl
#    - name: Create GitHub Release
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      run: >-
#        gh release create
#        '${{ github.ref_name }}'
#        --repo '${{ github.repository }}'
#        --notes ""
#    - name: Upload artifact signatures to GitHub Release
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      # Upload to GitHub Release using the `gh` CLI.
#      # `dist/` contains the built packages, and the
#      # sigstore-produced signatures and certificates.
#      run: >-
#        gh release upload
#        '${{ github.ref_name }}' dist/**
#        --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
    - build-version-specific
    - build-abi3
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/luwen

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: python-package-*
        path: dist/
        merge-multiple: true
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true
