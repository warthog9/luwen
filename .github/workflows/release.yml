name: Create Release
run-name: Create Release

on:
  workflow_dispatch:
  workflow_call:

jobs:
  # what this should do is properly do a release of everything here
  # that has a new version in it.  We aren't there yet.  So in the
  # interim assume the main core, c++ bindings, and python bindings
  # are all part of a release now, and they will be using the same version
  # going forward.
  versionchange:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
    <stuff goes here>
  changelogs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.3.0
      - run: git tag
      # Ok this needs to get up leveled somewhere so that it can be shared across Debian and Ubuntu obviously
      - run: ls -lah
      - name: Link the Ubuntu build stuff in as 'debian/'
        run: ln -s debian.ubuntu debian
      - name: Generate Ubuntu Changelog
        run: |
          gbp dch \
            --debian-branch ${{ github.ref_name }} \
            -R \
            -N ${MAJOR}.${MINOR}.${PATCH} \
            --spawn-editor=never \
            --commit \
            --commit-msg="Generating Ubuntu Changelog for ${MAJOR}.${MINOR}.${PATCH}-${NUMBER_OF_COMMITS_SINCE_TAG}"
        env:
          EMAIL: releases@tenstorrent.com
          NAME: Tenstorrent Releases
      - name: Link the Ubuntu build stuff in as 'debian/'
        run: ln -s debian.debian debian
      - name: Generate Debian Changelog
        run: |
          gbp dch \
            --debian-branch ${{ github.ref_name }} \
            -R \
            -N ${MAJOR}.${MINOR}.${PATCH} \
            --spawn-editor=never \
            --commit \
            --commit-msg="Generating Debian Changelog for ${MAJOR}.${MINOR}.${PATCH}-${NUMBER_OF_COMMITS_SINCE_TAG}"
      - run: git push
  buildall:
    needs:
      - versionchange
      - changelogs
    uses: ./.github/workflows/build-all.yml
    secrets: inherit

  tagrelease:
    <stuff goes here>
  generaterelease:
    <stuff goes here with artifacts getting shoved in the right place>
    <maybe tagging goes here too, unsure>
  publish-pypi:
    needs:
      - buildall
    uses: ./.github/workflows/release-pypi.yml
    secrets: inherit

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - buildall
      #- build-py-version-specific
      #- build-py-abi3
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/luwen

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-*
          path: dist/
          merge-multiple: true
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
