name: Create Release
run-name: Create Release

on:
  workflow_dispatch:
  workflow_call:

jobs:
  # what this should do is properly do a release of everything here
  # that has a new version in it.  We aren't there yet.  So in the
  # interim assume the main core, c++ bindings, and python bindings
  # are all part of a release now, and they will be using the same version
  # going forward.

  ###
  # Version Change
  ###
  versionchange:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install cargo
        run: sudo apt install -y cargo
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Git e-mail
        run: git config --global user.email "${EMAIL}"
      - name: Git name
        run: git config --global user.name "${NAME}"
      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces@0.3.6 --locked
      - name: Bump the version
        run: cargo ws version patch --allow-branch main --no-git-tag --message "Cargo Release %v" -y
      - name: What version are we?
        run: export luwen_ver="$( cargo metadata --format-version 1 | jq '.packages[] | select( .name =="luwen" ) | .version' | sed 's/"//g' )"
      - name: What Version?
        run: echo "[ ${luwen_ver} ]"
    env:
      EMAIL: releases@tenstorrent.com
      NAME: Tenstorrent Releases


  ###
  # Change Logs Generation
  ###
  changelogs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - run: sudo apt update
      - run: |
          sudo apt install -y \
            git-buildpackage
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.3.0
      - run: git tag
      # Ok this needs to get up leveled somewhere so that it can be shared across Debian and Ubuntu obviously
      - run: ls -lah
      - name: Link the Ubuntu build stuff in as 'debian/'
        run: ln -s debian.ubuntu debian
      - name: Generate Ubuntu Changelog
        run: |
          gbp dch \
            --debian-branch ${{ github.ref_name }} \
            -R \
            -N ${MAJOR}.${MINOR}.${PATCH} \
            --spawn-editor=never
            #--commit \
            #--commit-msg="Generating Ubuntu Changelog for ${MAJOR}.${MINOR}.${PATCH}-${NUMBER_OF_COMMITS_SINCE_TAG}"
        env:
          EMAIL: releases@tenstorrent.com
          NAME: Tenstorrent Releases
      - name: Link the Ubuntu build stuff in as 'debian/'
        run: rm debian && ln -s debian.debian debian
      - name: Generate Debian Changelog
        run: |
          gbp dch \
            --debian-branch ${{ github.ref_name }} \
            -R \
            N ${MAJOR}.${MINOR}.${PATCH} \
            --spawn-editor=never
        env:
          EMAIL: releases@tenstorrent.com
          NAME: Tenstorrent Releases
      - name: ok what happened
        run: git diff
      #- run: git push

  ###
  # Trigger Building Everything
  ###
  buildall:
    needs:
      - versionchange
      - changelogs
    uses: ./.github/workflows/build-all.yml
    secrets: inherit

  ###
  # Tag the Release
  ###
  # tagrelease:
  #  <stuff goes here>

  ###
  # Generate Release
  ###
  # generaterelease:
  #  <stuff goes here with artifacts getting shoved in the right place>
  #  <maybe tagging goes here too, unsure>

  ###
  # Publish PyPi
  ###
  publish-pypi:
    needs:
      - buildall
      - publish-to-testpypi
    uses: ./.github/workflows/release-pypi.yml
    secrets: inherit

  ###
  # Publish TEST PyPi
  ###
  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - buildall
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/luwen

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: python-package-*
          path: dist/
          merge-multiple: true
      - name: Publish distribution üì¶ to TestPyPI
        run: echo "Hi!"
        #   uses: pypa/gh-action-pypi-publish@release/v1
        #   with:
        #     repository-url: https://test.pypi.org/legacy/
        #     verbose: true
